{
  "variables": {
    "access_key": "{{ env `packer_access_key` }}",
    "secret_key": "{{ env `packer_secret_key` }}",
    "region": "eu-west-1",
    "source_ami": "ami-785db401",
    "instance_type": "t2.medium",
    "vpc_id": "vpc-6c16dd0b",
    "subnet_id": "subnet-d73ef6b0",
    "ami_description": "Packer",
    "ami_regions": "eu-west-1"
   },

  "builders": [{
    "type": "amazon-ebs",
    "vpc_id":  "{{user `vpc_id`}}",
    "subnet_id": "{{user `subnet_id`}}",
    "access_key": "{{user `access_key`}}",
    "secret_key": "{{user `secret_key`}}",
    "region": "{{user `region`}}",
    "launch_block_device_mappings": [
    {
      "device_name": "/dev/sda1",
      "delete_on_termination": true,
      "volume_size": 8,
      "volume_type": "gp2"
    }],
    "source_ami": "{{user `source_ami`}}",
    "instance_type": "{{user `instance_type`}}",
    "ssh_username": "ubuntu",
    "ami_name": "ami-app-{{isotime \"2006-01-02\"}}-{{uuid}}",
    "ami_description": "{{user `ami_description`}}",
    "ami_regions": ["{{user `ami_regions`}}"],
    "tags": {
        "ServerRole": "friend-app",
        "Runner": "Packer"
      }
  }],
  "provisioners": [
    {
      "type": "shell",
      "inline": [
        "sleep 10; sudo apt-get update -qq",
        "sudo apt-get install -qq -y ec2-ami-tools" 
      ]
    },
    {
      "type": "file",
      "source": "../friend",
      "destination": "/home/ubuntu/"
    },
    {
      "type": "file",
      "source": "../salt",
      "destination": "/home/ubuntu/"
    },
    {
      "type": "shell",
      "inline": "sudo apt-get update -qq && sudo apt-get install -y -qq salt-minion && sudo cp /home/ubuntu/salt/masterless.conf /etc/salt/minion.d/masterless.conf && sudo service salt-minion restart && sudo salt-call --local state.highstate"
    },
    {
      "type": "shell",
      "inline":  "sudo apt-get install -qq -y libmysqlclient-dev && export LC_ALL=C && sudo pip install --upgrade pip && cd /home/ubuntu/friend/app/ && sudo pip install -r requirements.txt"
    }

 ],
  "post-processors": [
      {
        "type": "manifest",
        "output": "../manifest_app.json",
        "strip_path": true
      }
  ]
}
